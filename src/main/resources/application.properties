# Server Configuration - Use standard port 8080 for manual deployment, dynamic for cloud
server.port=${PORT:8080}

# MongoDB Configuration - Environment-based connection
spring.data.mongodb.uri=${MONGODB_URI}
spring.data.mongodb.database=${SPRING_DATA_MONGODB_DATABASE:ReelCritic}
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
spring.data.mongodb.auto-index-creation=true

# Security & JWT Configuration
reelcritic.app.jwtSecret=${JWT_SECRET:ReelCriticSecretKeyForJwtTokenGenerationThatIsLongEnoughForHMAC256}
reelcritic.app.jwtExpirationMs=${JWT_EXPIRATION_MS:86400000}

# CORS Configuration - Support both manual deployment and cloud deployment
cors.allowed.origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001,https://reelcritic-frontend.onrender.com}

# API Documentation
springdoc.api-docs.path=/api-docs

# Actuator Configuration - Restrict in production
management.endpoints.web.exposure.include=${MANAGEMENT_ENDPOINTS:health,info}
management.endpoint.health.show-details=when-authorized

# Logging Configuration - Environment-based
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}
logging.level.com.moviebookingapp=${LOGGING_LEVEL_APP:INFO}
logging.level.org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer=ERROR

# Profile-specific configurations
spring.profiles.active=${SPRING_PROFILES_ACTIVE:default}

# Application Configuration
spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=true

# Production optimizations
spring.jpa.open-in-view=false
